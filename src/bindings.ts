/* eslint-disable */
// This file was generated by [tauri-specta](https://github.com/oscartbeaumont/tauri-specta). Do not edit this file manually.

declare global {
    interface Window {
        __TAURI_INVOKE__<T>(cmd: string, args?: Record<string, unknown>): Promise<T>;
    }
}

// Function avoids 'window not defined' in SSR
const invoke = () => window.__TAURI_INVOKE__;

export function setInterfaceConfiguration(cryptographicInterface: CryptographicInterface, configuration: FrontEndInterfaceConfiguration) {
    return invoke()<null>("set_interface_configuration", { cryptographicInterface,configuration })
}

export function getInterfaceConfiguration(cryptographicInterface: CryptographicInterface) {
    return invoke()<FrontEndInterfaceConfiguration | null>("get_interface_configuration", { cryptographicInterface })
}

export function getGroups(controllerUrl: string) {
    return invoke()<Group[]>("get_groups", { controllerUrl })
}

export function setCommunicatorCertificatePath(certificatePath: string, communicatorUrl: string) {
    return invoke()<null>("set_communicator_certificate_path", { certificatePath,communicatorUrl })
}

export type FrontEndInterfaceConfiguration = { isEnabled: boolean; controllerUrl: string; selectedGroup: string }
export type CryptographicInterface = "Pcsc" | "Cryptoki" | "Webauthn"
export type Group = { name: string; group_id: string }
